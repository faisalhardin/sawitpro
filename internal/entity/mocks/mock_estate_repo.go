// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/faisalhardin/sawitpro/internal/entity/interfaces (interfaces: EstateRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/faisalhardin/sawitpro/internal/entity/model"
	gomock "github.com/golang/mock/gomock"
)

// MockEstateRepo is a mock of EstateRepo interface.
type MockEstateRepo struct {
	ctrl     *gomock.Controller
	recorder *MockEstateRepoMockRecorder
}

// MockEstateRepoMockRecorder is the mock recorder for MockEstateRepo.
type MockEstateRepoMockRecorder struct {
	mock *MockEstateRepo
}

// NewMockEstateRepo creates a new mock instance.
func NewMockEstateRepo(ctrl *gomock.Controller) *MockEstateRepo {
	mock := &MockEstateRepo{ctrl: ctrl}
	mock.recorder = &MockEstateRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEstateRepo) EXPECT() *MockEstateRepoMockRecorder {
	return m.recorder
}

// GetEstateByUUID mocks base method.
func (m *MockEstateRepo) GetEstateByUUID(arg0 context.Context, arg1 string) (model.EstateDB, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateByUUID", arg0, arg1)
	ret0, _ := ret[0].(model.EstateDB)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEstateByUUID indicates an expected call of GetEstateByUUID.
func (mr *MockEstateRepoMockRecorder) GetEstateByUUID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateByUUID", reflect.TypeOf((*MockEstateRepo)(nil).GetEstateByUUID), arg0, arg1)
}

// GetEstateJoinTreeByParams mocks base method.
func (m *MockEstateRepo) GetEstateJoinTreeByParams(arg0 context.Context, arg1 model.InsertNewTreeRequest) ([]model.EstateJoinTrxTree, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateJoinTreeByParams", arg0, arg1)
	ret0, _ := ret[0].([]model.EstateJoinTrxTree)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateJoinTreeByParams indicates an expected call of GetEstateJoinTreeByParams.
func (mr *MockEstateRepoMockRecorder) GetEstateJoinTreeByParams(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateJoinTreeByParams", reflect.TypeOf((*MockEstateRepo)(nil).GetEstateJoinTreeByParams), arg0, arg1)
}

// GetEstateStats mocks base method.
func (m *MockEstateRepo) GetEstateStats(arg0 context.Context, arg1 string) (model.EstateStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateStats", arg0, arg1)
	ret0, _ := ret[0].(model.EstateStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateStats indicates an expected call of GetEstateStats.
func (mr *MockEstateRepoMockRecorder) GetEstateStats(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateStats", reflect.TypeOf((*MockEstateRepo)(nil).GetEstateStats), arg0, arg1)
}

// GetEstateTreesHeightPosition mocks base method.
func (m *MockEstateRepo) GetEstateTreesHeightPosition(arg0 context.Context, arg1 string) ([]model.TreeHeight, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateTreesHeightPosition", arg0, arg1)
	ret0, _ := ret[0].([]model.TreeHeight)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateTreesHeightPosition indicates an expected call of GetEstateTreesHeightPosition.
func (mr *MockEstateRepoMockRecorder) GetEstateTreesHeightPosition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateTreesHeightPosition", reflect.TypeOf((*MockEstateRepo)(nil).GetEstateTreesHeightPosition), arg0, arg1)
}

// InsertEstate mocks base method.
func (m *MockEstateRepo) InsertEstate(arg0 context.Context, arg1 *model.EstateDB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertEstate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertEstate indicates an expected call of InsertEstate.
func (mr *MockEstateRepoMockRecorder) InsertEstate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertEstate", reflect.TypeOf((*MockEstateRepo)(nil).InsertEstate), arg0, arg1)
}

// InsertTree mocks base method.
func (m *MockEstateRepo) InsertTree(arg0 context.Context, arg1 *model.TrxTree) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertTree", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertTree indicates an expected call of InsertTree.
func (mr *MockEstateRepoMockRecorder) InsertTree(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertTree", reflect.TypeOf((*MockEstateRepo)(nil).InsertTree), arg0, arg1)
}
